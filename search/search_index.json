{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the BTP Tour The BTP Tour is a guided exploration of the SAP Business Technology Platform ( BTP ), for everyone who is interested in developing a basic understanding of some of the key concepts and get some direct hands-on experience to see the BTP in action. Disclaimer The BTP Tour is a personal project with the aim to organize and share my own experience and help others to develop their own mental model of SAP's Business Technology Platform. Opinions expressed are solely my own and do not express the views or opinions of SAP. In particular, the BTP Tour must not be confused with an official SAP resource. All information is provided as is without any claims or guarantees regarding completeness, correctness, or being up-to-date to the latest official SAP guidelines and recommendations. Accordingly, one should not base any commercial decisions on the materials provided in the BTP Tour . Please reach out to official SAP channels for respective guidance and commercial support. Last but not least, please note that the BTP Tour is designed for educational purposes. Hence, materials and code examples are intentionally reduced to illustrate concepts and do not necessarily correspond with recommended best practices for implementing secure, productive applications. Tour Overview The BTP Tour introduces BTP principles in form of a small sample scenario as illustrated in the solution diagram below. Over the course of the tour, we will not only establish an understanding of the various concepts, services, and relationships depicted in the solution diagram. We will also shed some light on how these artifacts surface to developers and cloud operators, and put all this in context with widely-cited cloud principles like observability , continous integration and deployment ( CI/CD ), infrastructure as code , or relentless automation .","title":"Home"},{"location":"#welcome-to-the-btp-tour","text":"The BTP Tour is a guided exploration of the SAP Business Technology Platform ( BTP ), for everyone who is interested in developing a basic understanding of some of the key concepts and get some direct hands-on experience to see the BTP in action. Disclaimer The BTP Tour is a personal project with the aim to organize and share my own experience and help others to develop their own mental model of SAP's Business Technology Platform. Opinions expressed are solely my own and do not express the views or opinions of SAP. In particular, the BTP Tour must not be confused with an official SAP resource. All information is provided as is without any claims or guarantees regarding completeness, correctness, or being up-to-date to the latest official SAP guidelines and recommendations. Accordingly, one should not base any commercial decisions on the materials provided in the BTP Tour . Please reach out to official SAP channels for respective guidance and commercial support. Last but not least, please note that the BTP Tour is designed for educational purposes. Hence, materials and code examples are intentionally reduced to illustrate concepts and do not necessarily correspond with recommended best practices for implementing secure, productive applications.","title":"Welcome to the BTP Tour"},{"location":"#tour-overview","text":"The BTP Tour introduces BTP principles in form of a small sample scenario as illustrated in the solution diagram below. Over the course of the tour, we will not only establish an understanding of the various concepts, services, and relationships depicted in the solution diagram. We will also shed some light on how these artifacts surface to developers and cloud operators, and put all this in context with widely-cited cloud principles like observability , continous integration and deployment ( CI/CD ), infrastructure as code , or relentless automation .","title":"Tour Overview"},{"location":"content/config/bas/","text":"Create a new dev space Go to your BTP Trial account Chose SAP Business Application Studio in Quick Access Select Create Dev Space Choose a name, select the profile Full Stack Cloud Application , and add additional extensions like HTML5 Runner , HTML5 Application Template , Launchpad Module , and Workflow Management When the dev space is finally ready, click on the name to enter the Business Application Studio (BAS) Install the command line tool for Kyma The built-in terminal of BAS provides a convenient option for running a great variety of command line tools often needed for building, testing and managing code as well as interacting with cloud platforms like SAP BTP, Azure, AWS, or Google Cloud. In the BTP Tour we will use the terminal to configure and control our Kubernetes/Kyma cluster in the BTP Trial environment. Open a command line in BAS via Terminal > New Terminal Download and install the Kubernetes command line tool kubectl : mkdir -p ~/local/bin cd ~/local/bin curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" chmod u+x kubectl Create a new file .bash_aliases and add the following: if [ -d \"$HOME/local/bin\" ]; then PATH=\"$HOME/local/bin:$PATH\" fi Start a new Terminal and verify everything is working: kubectl version Note The kubectl version command should print out details like client version, platform etc. At this point, there is no need to worry if the command also prints an error message like Error from server (NotFound): the server could not find the requested resource . The tool simply states here that it cannot connect to a Kubernetes cluster for displaying further information. This will be addressed in the following. Setup access to Kyma Cluster Go to BTP Trial account https://hanatrial.ondemand.com Chose Go To Your Trial Account and enter the trial subaccount in BTP Cockpit Go to Kyma Environment > Link to dashboard Download the Kyma access configuration via the Profile icon in the top right and select Get Kubeconfig In BAS, make sure your home directory is opened ( Open > /home/user ) and no subfolder is selected in the file explorer. The upload the file kubeconfig.yml via File > Upload Files Add the following line to .bash_aliases and add the following line: export KUBECONFIG=$HOME/kubeconfig.yml Start a new Terminal and verify everything is working: bash kubectl version Warning For security reasons, the downloaded personal Kyma access configuration expires after 8 hours. After expiry, download a fresh kubeconfig.yml from your Kyma account and upload it again (steps 4 and 5). Configure access for github.com Go to your Github account and sign up for a new personal account if necessary Create new Personal Access Token (PAT) in Github (Profile > Settings > Developer settings > Personal access tokens) with scope repo and copy the generated token. Open a command line in BAS via Terminal > New Terminal Clone your fork of the BTP Tour repository git clone https://github.com/YOUR_GITHUB_NAME/btptour.git Hint Do not forget to replace YOUR_GITHUB_NAME in the command with your Github account name! This will open a username/password field at the top of the screen of BAS. Enter you email address as username and the generated token as password. Choose Save as plaintext on the dev space for future use .","title":"Business Application Studio"},{"location":"content/config/bas/#create-a-new-dev-space","text":"Go to your BTP Trial account Chose SAP Business Application Studio in Quick Access Select Create Dev Space Choose a name, select the profile Full Stack Cloud Application , and add additional extensions like HTML5 Runner , HTML5 Application Template , Launchpad Module , and Workflow Management When the dev space is finally ready, click on the name to enter the Business Application Studio (BAS)","title":"Create a new dev space"},{"location":"content/config/bas/#install-the-command-line-tool-for-kyma","text":"The built-in terminal of BAS provides a convenient option for running a great variety of command line tools often needed for building, testing and managing code as well as interacting with cloud platforms like SAP BTP, Azure, AWS, or Google Cloud. In the BTP Tour we will use the terminal to configure and control our Kubernetes/Kyma cluster in the BTP Trial environment. Open a command line in BAS via Terminal > New Terminal Download and install the Kubernetes command line tool kubectl : mkdir -p ~/local/bin cd ~/local/bin curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" chmod u+x kubectl Create a new file .bash_aliases and add the following: if [ -d \"$HOME/local/bin\" ]; then PATH=\"$HOME/local/bin:$PATH\" fi Start a new Terminal and verify everything is working: kubectl version Note The kubectl version command should print out details like client version, platform etc. At this point, there is no need to worry if the command also prints an error message like Error from server (NotFound): the server could not find the requested resource . The tool simply states here that it cannot connect to a Kubernetes cluster for displaying further information. This will be addressed in the following.","title":"Install the command line tool for Kyma"},{"location":"content/config/bas/#setup-access-to-kyma-cluster","text":"Go to BTP Trial account https://hanatrial.ondemand.com Chose Go To Your Trial Account and enter the trial subaccount in BTP Cockpit Go to Kyma Environment > Link to dashboard Download the Kyma access configuration via the Profile icon in the top right and select Get Kubeconfig In BAS, make sure your home directory is opened ( Open > /home/user ) and no subfolder is selected in the file explorer. The upload the file kubeconfig.yml via File > Upload Files Add the following line to .bash_aliases and add the following line: export KUBECONFIG=$HOME/kubeconfig.yml Start a new Terminal and verify everything is working: bash kubectl version Warning For security reasons, the downloaded personal Kyma access configuration expires after 8 hours. After expiry, download a fresh kubeconfig.yml from your Kyma account and upload it again (steps 4 and 5).","title":"Setup access to Kyma Cluster"},{"location":"content/config/bas/#configure-access-for-githubcom","text":"Go to your Github account and sign up for a new personal account if necessary Create new Personal Access Token (PAT) in Github (Profile > Settings > Developer settings > Personal access tokens) with scope repo and copy the generated token. Open a command line in BAS via Terminal > New Terminal Clone your fork of the BTP Tour repository git clone https://github.com/YOUR_GITHUB_NAME/btptour.git Hint Do not forget to replace YOUR_GITHUB_NAME in the command with your Github account name! This will open a username/password field at the top of the screen of BAS. Enter you email address as username and the generated token as password. Choose Save as plaintext on the dev space for future use .","title":"Configure access for github.com"},{"location":"content/config/kyma/","text":"Initial configuration of Kubernetes/Kyma cluster Configuration of Kyma cluster and preparation of the Github repository for CI/CD via Github Actions. Prerequisites Kyma cluster on SAP BTP Trial Kubernetes CLI tool kubectl with a connection to your Kyma cluster Account on github.com Prepare cluster Create namespace btptour kubectl create namespace btptour Hint : You can use the Terminal window of the Business Application Studio to run all commands and scripts listed on a Windows machine. Hint You can use the Terminal window of the Business Application Studio to run all commands and scripts listed on a Windows machine. Enable Kubernetes/Kyma to pull container images from ghcr.io Create new Personal Access Token (PAT) in Github (Profile > Settings > Developer settings > Personal access tokens) with scope read:packages . Create secret for pulling images from Github container registry kubectl -n btptour create secret docker-registry regcred \\ --docker-server=https://ghcr.io \\ --docker-username=<github user> \\ --docker-password=<github personal access token> Enable Github actions to access the cluster Create service account kubectl apply -f serviceaccount.yml -n btptour Assemble a cluster access configuration for the service account The access configuration for the cluster can be created with the create_kubeconfig.sh shell script and stored in the file kubeconfig.yml as follows: bash create_kubeconfig.sh > kubeconfig.yml Encode the cluster access configuration in Base64 For use within Github Actions the configuration text file needs to be converted to a text file in Base64 encoding: cat kubeconfig.yml | base64 > secret.txt Add the config securely to the Github repository Create a new secret with the name BTP_TRIAL_KUBECONFIG in the Github repository (Settings > Secrets > Actions) with the contents of the secret.txt file. Resources Github Actions SAP Tech Bytes: Using GitHub Actions to Deploy Continuously to Kyma/Kubernetes (Blog) Create a Kyma service account (Blog)","title":"Kubernetes/Kyma"},{"location":"content/config/kyma/#initial-configuration-of-kuberneteskyma-cluster","text":"Configuration of Kyma cluster and preparation of the Github repository for CI/CD via Github Actions.","title":"Initial configuration of Kubernetes/Kyma cluster"},{"location":"content/config/kyma/#prerequisites","text":"Kyma cluster on SAP BTP Trial Kubernetes CLI tool kubectl with a connection to your Kyma cluster Account on github.com","title":"Prerequisites"},{"location":"content/config/kyma/#prepare-cluster","text":"Create namespace btptour kubectl create namespace btptour Hint : You can use the Terminal window of the Business Application Studio to run all commands and scripts listed on a Windows machine. Hint You can use the Terminal window of the Business Application Studio to run all commands and scripts listed on a Windows machine.","title":"Prepare cluster"},{"location":"content/config/kyma/#enable-kuberneteskyma-to-pull-container-images-from-ghcrio","text":"Create new Personal Access Token (PAT) in Github (Profile > Settings > Developer settings > Personal access tokens) with scope read:packages . Create secret for pulling images from Github container registry kubectl -n btptour create secret docker-registry regcred \\ --docker-server=https://ghcr.io \\ --docker-username=<github user> \\ --docker-password=<github personal access token>","title":"Enable Kubernetes/Kyma to pull container images from ghcr.io"},{"location":"content/config/kyma/#enable-github-actions-to-access-the-cluster","text":"Create service account kubectl apply -f serviceaccount.yml -n btptour Assemble a cluster access configuration for the service account The access configuration for the cluster can be created with the create_kubeconfig.sh shell script and stored in the file kubeconfig.yml as follows: bash create_kubeconfig.sh > kubeconfig.yml Encode the cluster access configuration in Base64 For use within Github Actions the configuration text file needs to be converted to a text file in Base64 encoding: cat kubeconfig.yml | base64 > secret.txt Add the config securely to the Github repository Create a new secret with the name BTP_TRIAL_KUBECONFIG in the Github repository (Settings > Secrets > Actions) with the contents of the secret.txt file.","title":"Enable Github actions to access the cluster"},{"location":"content/config/kyma/#resources","text":"Github Actions SAP Tech Bytes: Using GitHub Actions to Deploy Continuously to Kyma/Kubernetes (Blog) Create a Kyma service account (Blog)","title":"Resources"}]}